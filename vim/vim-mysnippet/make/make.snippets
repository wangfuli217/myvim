# ~/.vim/UltiSnips/make.snippets

snippet header "Makefile header" !b
# File: `!v expand('%:~:.')`

$0
endsnippet

snippet rule "Pattern rule"
${1:pattern-$@}: ${2:prerequisite-$<}${3: }${3:other-prerequisites}
  $0
endsnippet

snippet phony "PHONY target" !b
.PHONY: $1
${1:all}: ${3:$(${2:PROGRAMS})}
endsnippet

global !p
def py_ifneqdef(snip, post):
  body = snip.buffer[snip.line]
  snip.buffer[snip.line] = ''
  body += " ${1:Text}" if body[-1] == 'f' else " (${1:ARG1}, ${2:ARG2})"
  body += post
  snip.expand_anon(body)
endglobal

post_jump "py_ifneqdef(snip, '\n\t$0\nendif')"
snippet "ifn?(eq|def)" "if[n]eq/…def CONDITION … endif" br
`!p snip.rv = match.group(0) `
endsnippet

post_jump "py_ifneqdef(snip, '\n\t$0')"
snippet "else ifn?(eq|def)" "else if[n]eq…def CONDITION …" br
`!p snip.rv += match.group(0)`
endsnippet

snippet elif "else ifeq (a,b)" b
else ifeq
endsnippet

snippet "(?:\$\()?(?:foreach|for|each)" "$(foreach var,values,body)" r
$(foreach ${1:val},${3:$(${2:items})},${4:loopbody})$0
endsnippet

snippet template "define template" b
define ${2:${1:Program}_tpl} =
  ${5:${3:$(1)}: ${4:$(2)}}$0
endef
endsnippet

snippet call "$(call TEMPLATE,ARG1)"
$(call ${1:TemplateName},${2:ARG1})
endsnippet

snippet eval "$(eval ${VISUAL})"
$(eval ${1:${VISUAL}})
endsnippet

snippet sub "$(subst FROM,TO,${VISUAL:TEXT})"
$(subst ${1:FROM},${2:TO},${3:${VISUAL:TEXT}})
endsnippet

snippet patsub "$(patsubst PATTERN,REPLACEMENT,${VISUAL:TEXT})"
$(patsubst ${1:PATTERN},${2:REPLACEMENT},${3:${VISUAL:TEXT}})
endsnippet

snippet subp "$(${VISUAL:TEXT}:PATTERN=REPLACEMENT)"
$(${3:${VISUAL:VAR}}:${1:PAT}=${2:REPLACE})
endsnippet

snippet src "SRC" !b
${1:SRC}= ${2:files}$0
endsnippet

snippet obj "OBJ" !b
${1:OBJ}= ${${2:SRC}:${3:.cc}=${4:.o}}$0
endsnippet

snippet bin "BIN" !b
${1:BIN}= ${2:binary}$0
endsnippet

snippet lib "library" !b
${1:LIB}= ${2:library.a}$0
endsnippet

snippet cc "CC and CFLAGS" !b
CC=gcc ${0:-fsanitize=address}
CFLAGS= -Wall -Wextra -Werror -pedantic -std=c99
$0
endsnippet

snippet cxx "CXX and CFLAGS" !b
CXX=g++
CXXFLAGS= -Wall -Wextra -Werror -pedantic -std=c++17
endsnippet

snippet cpp "CPPFLAGS" !b
CPPFLAGS= ${1:-Isrc/}$0
endsnippet

snippet clean "clean rule" !b
clean:
	${1:${RM}} ${${2:OBJ}} ${${3:BIN}}$0
endsnippet

snippet PH ".PHONY" !b
.PHONY: ${1:all} ${2:clean} ${3:check}$0
endsnippet

snippet rule "create a basic rule" !b
${1:${BIN}}: ${2:${OBJ}}
	${3:${CC}} $2 -o $1$0
endsnippet

snippet all "all rule" !b
${1:all}: ${2:${BIN}}$0
endsnippet